name: Pull Request - Report

on:
  # When manually triggered
  workflow_dispatch:

env:
  PENDING_REVIEW_LABEL: "Review: Pending"
  CHANGES_REQUESTED_LABEL: "Review: Changes requested"
  APPROVED_LABEL: "Review: Approved"

jobs:
  report:
    name: Report
    runs-on: ubuntu-latest

    steps:
      - name: Run script
        uses: actions/github-script@v7
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          script: |
            // Get all pull requests
            const pull_requests = await github.paginate(github.rest.pulls.list, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: "open",
              sort: "created",
              direction: "asc",
            });
            
            // Find pending pull requests
            const pending_pull_requests = pull_requests.filter((pull_request) => pull_request.labels.some((label) => label.name === process.env.PENDING_REVIEW_LABEL));
            console.log("Pending pull requests:", pending_pull_requests);
            
            // Find changes requested pull requests
            const changes_requested_pull_requests = pull_requests.filter((pull_request) => pull_request.labels.some((label) => label.name === process.env.CHANGES_REQUESTED_LABEL));
            console.log("Changes requested pull requests:", changes_requested_pull_requests);
        
            // Find approved pull requests
            const approved_pull_requests = pull_requests.filter((pull_request) => pull_request.labels.some((label) => label.name === process.env.APPROVED_LABEL));
            console.log("Approved pull requests:", approved_pull_requests);
            
            // Build the Slack message
            const message = {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":loudspeaker: *Daily Code Review Recap* :loudspeaker:"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":eyes: *Pending*"
                  }
                },
                {
                  "type": "rich_text",
                  "elements": [
                    {
                      "type": "rich_text_list",
                      "style": "bullet",
                      "indent": 0,
                      "elements": [
                        {
                          "type": "rich_text_section",
                          "elements": [
                            {
                              "type": "link",
                              "url": "https://example.com/",
                              "text": "ABC-001"
                            },
                            {
                              "type": "text",
                              "text": " Some pull request ("
                            },
                            {
                              "type": "link",
                              "url": "https://example.com/",
                              "text": "#123"
                            },
                            {
                              "type": "text",
                              "text": ") - by "
                            },
                            {
                              "type": "link",
                              "url": "https://example.com/",
                              "text": "@JoaoBrlt"
                            }
                          ]
                        },
                        {
                          "type": "rich_text_section",
                          "elements": [
                            {
                              "type": "link",
                              "url": "https://example.com/",
                              "text": "ABC-001"
                            },
                            {
                              "type": "text",
                              "text": " Some pull request ("
                            },
                            {
                              "type": "link",
                              "url": "https://example.com/",
                              "text": "#123"
                            },
                            {
                              "type": "text",
                              "text": ") - by "
                            },
                            {
                              "type": "link",
                              "url": "https://example.com/",
                              "text": "@JoaoBrlt"
                            }
                          ]
                        },
                        {
                          "type": "rich_text_section",
                          "elements": [
                            {
                              "type": "link",
                              "url": "https://example.com/",
                              "text": "ABC-001"
                            },
                            {
                              "type": "text",
                              "text": " Some pull request ("
                            },
                            {
                              "type": "link",
                              "url": "https://example.com/",
                              "text": "#123"
                            },
                            {
                              "type": "text",
                              "text": ") - by "
                            },
                            {
                              "type": "link",
                              "url": "https://example.com/",
                              "text": "@JoaoBrlt"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":pencil2: *Changes requested*"
                  }
                },
                {
                  "type": "rich_text",
                  "elements": [
                    {
                      "type": "rich_text_list",
                      "style": "bullet",
                      "indent": 0,
                      "elements": [
                        {
                          "type": "rich_text_section",
                          "elements": [
                            {
                              "type": "text",
                              "text": "None"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":white_check_mark: *Approved*"
                  }
                },
                {
                  "type": "rich_text",
                  "elements": [
                    {
                      "type": "rich_text_list",
                      "style": "bullet",
                      "indent": 0,
                      "elements": [
                        {
                          "type": "rich_text_section",
                          "elements": [
                            {
                              "type": "text",
                              "text": "None"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
            
            // Send the Slack message
            fetch(process.env.SLACK_WEBHOOK_URL, {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify(message),
            })
              .then((response) => {
                if (!response.ok) {
                  throw new Error(`Invalid response: ${response.statusText}`);
                }
                return response.text();
              })
              .then((data) => console.log("Successfully sent the message:", data))
              .catch((error) => console.error("Unable to send the message:", error));
