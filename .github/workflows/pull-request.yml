name: Pull Request

on:
  # When a pull request is opened, synchronized or reopened
  pull_request_target:

  # When a pull request review is submitted, edited or dismissed
  pull_request_review:

jobs:
  label:
    name: Label
    runs-on: ubuntu-latest

    steps:
      - name: Run script
        uses: actions/github-script@v7
        id: set-result
        with:
          script: |
            // Get the pull request
            const pull_request = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ github.event.pull_request.number }},
            });
            const pull_request_number = pull_request.data.number;
            const pull_request_user_id = pull_request.data.user.id;
            console.log("Pull request:", pull_request);

            // Get pull request reviews
            const reviews = await github.paginate(github.rest.pulls.listReviews, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pull_request_number,
            });
            console.log("Reviews:", reviews);

            // Filter pull request reviews
            const latest_review_by_user = new Map();
            for (const review of reviews) {
              const review_user_id = review.user.id;
            
              // Ignore reviews from the author
              if (review_user_id === pull_request_user_id) {
                continue;
              }
            
              // Keep only the latest review
              const previous_review = latest_review_by_user.get(review.user.id);
              if (previous_review == null) {
                latest_review_by_user.set(review.user.id, review);
              } else {
                previous_review_date = Date.parse(previous_review.submitted_at);
                current_review_date = Date.parse(review.submitted_at);
            
                if (current_review_date >= previous_review_date) {
                  latest_review_by_user.set(review.user.id, review);
                }
              }
            }
            console.log("Latest review by user:", latest_review_by_user);

            // Group pull request reviews by state
            const reviews_by_state = new Map();
            for (const review of latest_review_by_user.values()) {
              const previous_reviews = reviews_by_state.get(review.state) ?? [];
              reviews_by_state.set(review.state, [...previous_reviews, review]);
            }
            console.log("Reviews by state:", reviews_by_state);
